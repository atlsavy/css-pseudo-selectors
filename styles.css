html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

/*You can use CSS to make elements with this class completely hidden from the visual page, but still be announced by screen readers. The CSS you are about to write is a common set of properties used to ensure elements are completely hidden visually.*/
span[class~="sr-only"] {
    /*Rather than having to constantly double-check you are not overwriting your earlier properties, you can use the !important keyword to ensure these properties are always applied, regardless of order or specificity.*/
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
    white-space: nowrap !important;
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/*he :first-of-type pseudo-selector is used to target the first element that matches the selector.*/
h1 .flex span:first-of-type {
    font-size: 0.7em;
}

/*The :last-of-type pseudo-selector does the exact opposite - it targets the last element that matches the selector.*/
h1 .flex span:last-of-type {
    font-size: 1.2em;
}

section {
    max-width: 40rem;
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    top: 0;
    color: #fff;
    background-color: #0a0a23;
    margin: 0 -2px;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
    z-index: 999;
}

#years span[class] {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/*The :not() pseudo-selector is used to target all elements that do not match the selector - in this case, any of your span elements that do not have the sr-only class. This ensures that your earlier rules for the span[class~="sr-only"] selector are not overwritten.*/

/*not:span {
    font-style: none;
}*/

table {
    border-collapse: collapse;
    border: 0;
    width: 100%;
    margin-top: 3rem;
    position: relative;
}

table caption {
    color: #356eaf;
    font-weight: normal;
    font-size: 1.3em;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}

tbody td {
    width: 100vw;  /*fills viewport, This approach ensures that the width is fixed, whereas setting width specifically would allow the elements to shrink to the container.*/
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);

}

/*The [attribute="value"] selector targets any element that has an attribute with a specific value. The below selector  targets specifically your tr elements with the total class*/
tr[class="total"] {
    border-bottom: 4px double #0a0a23;
    font-weight: bold;
}

tr[class="total"] th {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td{
    text-align: right;
    padding: 0 0.25rem;
}

/*The :nth-of-type() pseudo-selector is used to target specific elements based on their order among siblings of the same type.*/
tr.total td:nth-of-type(3) {
    padding-right: 0.5rem;
}

tr.total:hover {
    background-color: #99c9ff;
}

td.current {
    font-style: italic;
}

tr.data {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    padding: 0.3rem 0 0 0.5rem;
    text-align: left;
}

/* This selector to target the elements with the class set to description that are within your th elements in your .data table rows.*/
tr.data th .description {
    display: block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

/* Create a selector to target the td elements within your tr.data elements. Vertically align the text to the top and horizontally align the text to the right*/
tr.data td {
    text-align: right;
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
}

tr.data td:last-of-type{
    padding-right: 0.5rem;
}